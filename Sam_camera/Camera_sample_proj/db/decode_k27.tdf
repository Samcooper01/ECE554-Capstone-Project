--lpm_decode DEVICE_FAMILY="Cyclone V" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 23.1 cbx_cycloneii 2023:11:29:19:36:39:SC cbx_lpm_add_sub 2023:11:29:19:36:39:SC cbx_lpm_compare 2023:11:29:19:36:39:SC cbx_lpm_decode 2023:11:29:19:36:39:SC cbx_mgl 2023:11:29:19:36:47:SC cbx_nadder 2023:11:29:19:36:39:SC cbx_stratix 2023:11:29:19:36:39:SC cbx_stratixii 2023:11:29:19:36:39:SC  VERSION_END


-- Copyright (C) 2023  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 18 
SUBDESIGN decode_k27
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode4973w[1..0]	: WIRE;
	w_anode4982w[3..0]	: WIRE;
	w_anode4999w[3..0]	: WIRE;
	w_anode5009w[3..0]	: WIRE;
	w_anode5019w[3..0]	: WIRE;
	w_anode5029w[3..0]	: WIRE;
	w_anode5039w[3..0]	: WIRE;
	w_anode5049w[3..0]	: WIRE;
	w_anode5059w[3..0]	: WIRE;
	w_anode5071w[1..0]	: WIRE;
	w_anode5078w[3..0]	: WIRE;
	w_anode5089w[3..0]	: WIRE;
	w_anode5099w[3..0]	: WIRE;
	w_anode5109w[3..0]	: WIRE;
	w_anode5119w[3..0]	: WIRE;
	w_anode5129w[3..0]	: WIRE;
	w_anode5139w[3..0]	: WIRE;
	w_anode5149w[3..0]	: WIRE;
	w_data4971w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode5149w[3..3], w_anode5139w[3..3], w_anode5129w[3..3], w_anode5119w[3..3], w_anode5109w[3..3], w_anode5099w[3..3], w_anode5089w[3..3], w_anode5078w[3..3]), ( w_anode5059w[3..3], w_anode5049w[3..3], w_anode5039w[3..3], w_anode5029w[3..3], w_anode5019w[3..3], w_anode5009w[3..3], w_anode4999w[3..3], w_anode4982w[3..3]));
	w_anode4973w[] = ( (w_anode4973w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode4982w[] = ( (w_anode4982w[2..2] & (! w_data4971w[2..2])), (w_anode4982w[1..1] & (! w_data4971w[1..1])), (w_anode4982w[0..0] & (! w_data4971w[0..0])), w_anode4973w[1..1]);
	w_anode4999w[] = ( (w_anode4999w[2..2] & (! w_data4971w[2..2])), (w_anode4999w[1..1] & (! w_data4971w[1..1])), (w_anode4999w[0..0] & w_data4971w[0..0]), w_anode4973w[1..1]);
	w_anode5009w[] = ( (w_anode5009w[2..2] & (! w_data4971w[2..2])), (w_anode5009w[1..1] & w_data4971w[1..1]), (w_anode5009w[0..0] & (! w_data4971w[0..0])), w_anode4973w[1..1]);
	w_anode5019w[] = ( (w_anode5019w[2..2] & (! w_data4971w[2..2])), (w_anode5019w[1..1] & w_data4971w[1..1]), (w_anode5019w[0..0] & w_data4971w[0..0]), w_anode4973w[1..1]);
	w_anode5029w[] = ( (w_anode5029w[2..2] & w_data4971w[2..2]), (w_anode5029w[1..1] & (! w_data4971w[1..1])), (w_anode5029w[0..0] & (! w_data4971w[0..0])), w_anode4973w[1..1]);
	w_anode5039w[] = ( (w_anode5039w[2..2] & w_data4971w[2..2]), (w_anode5039w[1..1] & (! w_data4971w[1..1])), (w_anode5039w[0..0] & w_data4971w[0..0]), w_anode4973w[1..1]);
	w_anode5049w[] = ( (w_anode5049w[2..2] & w_data4971w[2..2]), (w_anode5049w[1..1] & w_data4971w[1..1]), (w_anode5049w[0..0] & (! w_data4971w[0..0])), w_anode4973w[1..1]);
	w_anode5059w[] = ( (w_anode5059w[2..2] & w_data4971w[2..2]), (w_anode5059w[1..1] & w_data4971w[1..1]), (w_anode5059w[0..0] & w_data4971w[0..0]), w_anode4973w[1..1]);
	w_anode5071w[] = ( (w_anode5071w[0..0] & data_wire[3..3]), enable_wire);
	w_anode5078w[] = ( (w_anode5078w[2..2] & (! w_data4971w[2..2])), (w_anode5078w[1..1] & (! w_data4971w[1..1])), (w_anode5078w[0..0] & (! w_data4971w[0..0])), w_anode5071w[1..1]);
	w_anode5089w[] = ( (w_anode5089w[2..2] & (! w_data4971w[2..2])), (w_anode5089w[1..1] & (! w_data4971w[1..1])), (w_anode5089w[0..0] & w_data4971w[0..0]), w_anode5071w[1..1]);
	w_anode5099w[] = ( (w_anode5099w[2..2] & (! w_data4971w[2..2])), (w_anode5099w[1..1] & w_data4971w[1..1]), (w_anode5099w[0..0] & (! w_data4971w[0..0])), w_anode5071w[1..1]);
	w_anode5109w[] = ( (w_anode5109w[2..2] & (! w_data4971w[2..2])), (w_anode5109w[1..1] & w_data4971w[1..1]), (w_anode5109w[0..0] & w_data4971w[0..0]), w_anode5071w[1..1]);
	w_anode5119w[] = ( (w_anode5119w[2..2] & w_data4971w[2..2]), (w_anode5119w[1..1] & (! w_data4971w[1..1])), (w_anode5119w[0..0] & (! w_data4971w[0..0])), w_anode5071w[1..1]);
	w_anode5129w[] = ( (w_anode5129w[2..2] & w_data4971w[2..2]), (w_anode5129w[1..1] & (! w_data4971w[1..1])), (w_anode5129w[0..0] & w_data4971w[0..0]), w_anode5071w[1..1]);
	w_anode5139w[] = ( (w_anode5139w[2..2] & w_data4971w[2..2]), (w_anode5139w[1..1] & w_data4971w[1..1]), (w_anode5139w[0..0] & (! w_data4971w[0..0])), w_anode5071w[1..1]);
	w_anode5149w[] = ( (w_anode5149w[2..2] & w_data4971w[2..2]), (w_anode5149w[1..1] & w_data4971w[1..1]), (w_anode5149w[0..0] & w_data4971w[0..0]), w_anode5071w[1..1]);
	w_data4971w[2..0] = data_wire[2..0];
END;
--VALID FILE
